@model List<GeospaceEntity.Models.Codes.CodeUmagf>
@{
    ViewBag.Title = "Геомагнитная обстановка: K-индекс";
}
@if (ViewBag.Error != null)
{
    <h2>@ViewBag.Error</h2>
}
else
{
    <div id="container_@ViewBag.Panel" style="min-width: 310px; height: 500px; margin: 0 auto"></div>
}
@section Scripts
{
    @Scripts.Render("~/Scripts/highcharts.js")
    <script src="http://code.highcharts.com/stock/modules/exporting.js"></script>
    @Scripts.Render("~/Scripts/draggable-points.js")
}
@helper DrawColor(int k, int hour, int min, int day)
{
    string color = "#FF0000";
    if (k <= 3)
    {
        color = "#00FF00";
    }
    if (k == 4)
    {
        color = "#FFFF00";
    }
    DateTime dateStart = new DateTime((ViewBag.Date.AddDays(day)).Year, (ViewBag.Date.AddDays(day)).Month, (ViewBag.Date.AddDays(day)).Day, hour, min, 0);

    //DateTime dateEnd= new DateTime(ViewBag.Date.Year, ViewBag.Date.Month, ViewBag.Date.Day, time+2, 59, 59);
    long ticksStart = (long)dateStart.Subtract(new DateTime(1970, 1, 1)).TotalMilliseconds;
    //long ticksEnd = (long)dateEnd.Subtract(new DateTime(1970, 1, 1)).TotalMilliseconds;

    if (k == 0)
    {  <text>
        {x:@(ticksStart), y:null, color: '@(color)'}
        </text>
    }
    else
    {
        <text>
            {x:@(ticksStart), y:@k, color: '@(color)'}
        </text>
    }
}
@helper DrawLines(int day)
{
    DateTime dateStart = new DateTime((ViewBag.Date.AddDays(day)).Year, (ViewBag.Date.AddDays(day)).Month, (ViewBag.Date.AddDays(day)).Day, 0, 0, 0);
    long ticksStart = (long)dateStart.Subtract(new DateTime(1970, 1, 1)).TotalMilliseconds;

    <text>
        {
        value:@(ticksStart),
        color: 'blue',
        width: 3.5,
        }
    </text>
}

    <script>
    $(document).ready(function () {
        var panelVieww = parseInt('@ViewBag.Panel');
        Highcharts.setOptions({
            global: {
                useUTC: true
            },
            lang: {
                loading: 'Загрузка...',
                months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
                weekdays: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],
                shortMonths: ['Янв', 'Фев', 'Март', 'Апр', 'Май', 'Июнь', 'Июль', 'Авг', 'Сент', 'Окт', 'Нояб', 'Дек'],
                exportButtonTitle: "Экспорт",
                printButtonTitle: "Печать",
                rangeSelectorFrom: "С",
                rangeSelectorTo: "По",
                rangeSelectorZoom: "Период",
                downloadPNG: 'Скачать PNG',
                downloadJPEG: 'Скачать JPEG',
                downloadPDF: 'Скачать PDF',
                downloadSVG: 'Скачать SVG',
                printChart: 'Напечатать график'
            }
        });


        $('#container_@ViewBag.Panel').highcharts({
            chart: {
                type: 'column'
            },
            title: {
                text: 'Геомагнитная обстановка за @ViewBag.Date.ToString("d MMMM yyyy") @ViewBag.Station.Name'
            },
            tooltip: false,
            xAxis: {
                title: {
                    text: 'Часы (UTC)'
                },
                type: 'datetime',
                dateTimeLabelFormats: {
                    minute: '',
                    hour: '%H',
                },
                labels: {
                    overflow: 'justify',
                    rotation: 'none'
                },
                lineWidth: 2,
                gridLineWidth: 1,
                tickInterval: 1,
                tickmarkPlacement: 'on',
                plotLines: [
                    @for (int k = -2; k <= 1; k++ )
                    { @DrawLines(k)
                        @:,
                        }
                ]
            },
            yAxis: {
                title: {
                    text: 'Значения индекса K'
                },
                gridLineWidth: 1,
                tickInterval: 1,
                tickmarkPlacement: 'on',
                categories: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],
                max: 10
            },
            legend: {
                enabled: false
            },
            exporting: {
                buttons: {
                    contextButton: {
                        enabled: false,
                    }
                }
            },

            series: [{
                name: 'k',
                data:
                   [
                    @if (Model != null)
                    {
                        int day = -2;
                        for (int i = 0; i < 3; i++)
                        {
                            if (i < Model.Count)
                            {
                                @DrawColor(Model[i].k1, 1, 30, day)
                                @Html.Raw(",")
                                @DrawColor(Model[i].k2, 4, 30, day)
                                @Html.Raw(",")
                                @DrawColor(Model[i].k3, 7, 30, day)
                                @Html.Raw(",")
                                @DrawColor(Model[i].k4, 10, 30, day)
                                @Html.Raw(",")
                                @DrawColor(Model[i].k5, 13, 30, day)
                                @Html.Raw(",")
                                @DrawColor(Model[i].k6, 16, 30, day)
                                @Html.Raw(",")
                                @DrawColor(Model[i].k7, 19, 30, day)
                                @Html.Raw(",")
                                @DrawColor(Model[i].k8, 22, 30, day)
                                if (day != 0)
                                {
                                    @Html.Raw(",")
                                }
                            }
                            else
                            {
                                @DrawColor(0, 1, 30, day)
                                @Html.Raw(",")
                                @DrawColor(0, 4, 30, day)
                                @Html.Raw(",")
                                @DrawColor(0, 7, 30, day)
                                @Html.Raw(",")
                                @DrawColor(0, 10, 30, day)
                                @Html.Raw(",")
                                @DrawColor(0, 13, 30, day)
                                @Html.Raw(",")
                                @DrawColor(0, 16, 30, day)
                                @Html.Raw(",")
                                @DrawColor(0, 19, 30, day)
                                @Html.Raw(",")
                                @DrawColor(0, 22, 30, day)
                                if (day != 0)
                                {
                                    @Html.Raw(",")
                                }
                            }
                            day++;
                        }

                    }

                   ]
                ,
                dataLabels: {
                    enabled: true,
                    color: '#FFFFFF',
                    align: 'center',
                    format: '{point.y}', // one decimal
                    verticalAlign: 'center',
                    style: {
                        fontSize: '20px',
                        fontFamily: 'Verdana, sans-serif'
                    }
                }
            }],
            plotOptions: {
                series: {
                    pointRange: 3 * 3600 * 1000, // one day
                    pointPadding: 0,
                    groupPadding: 0,
                    shadow: false
                }
            }
        });


    })

</script>
    <br>
    <table border="1" cellpadding="7" cellspacing="1" width="100%">
        <tbody>
            <tr align="center">
                <th align="left" width="20%"><span>K-index</span></th>
                <td width="13%"><span>0,1,2</span></td>
                <td width="13%"><span>3</span></td>
                <td width="13%"><span>4</span></td>
                <td width="13%"><span>5</span></td>
                <td width="13%"><span>6</span></td>
                <td width="13%"><span>7,8,9</span></td>
            </tr>
            <tr align="center">
                <th align="left"><span>Состояние<br>магнитного поля</span></th>
                <td bgcolor="#00FF00"><span>очень<br>спокойное</span></td>
                <td bgcolor="#00FF00"><span>спокойное</span></td>
                <td bgcolor="#FFFF00"><span>неустойчивое</span></td>
                <td bgcolor="#FF0000"><span>слабо<br>возмущенное</span></td>
                <td bgcolor="#FF0000"><span>умеренно<br>возмущенное</span></td>
                <td bgcolor="#FF0000"><br><span>сильно<br>возмущенное<br><br></span></td>
            </tr>
        </tbody>
    </table>
