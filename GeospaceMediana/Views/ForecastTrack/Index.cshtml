@using GeospaceEntity.Helper;
@{
    ViewBag.Title = @ViewBag.Title;
    
}

@DrawTable("container_0", Model.header[3], Model.Table1[3], Model.Table2[3], Model.grafValues[3], Model.Colors1[3], Model.Colors2[3])
@DrawTable("container_1", Model.header[4], Model.Table1[4], Model.Table2[4], Model.grafValues[4], Model.Colors1[3], Model.Colors2[4])
@DrawTable("container_2", Model.header[5], Model.Table1[5], Model.Table2[5], Model.grafValues[5], Model.Colors1[3], Model.Colors2[5])
@DrawTable("container_3", Model.header[0], Model.Table1[0], Model.Table2[0], Model.grafValues[0], Model.Colors1[3], Model.Colors2[0])
@DrawTable("container_4", Model.header[1], Model.Table1[1], Model.Table2[1], Model.grafValues[1], Model.Colors1[3], Model.Colors2[1])
@DrawTable("container_5", Model.header[2], Model.Table1[2], Model.Table2[2], Model.grafValues[2], Model.Colors1[3], Model.Colors2[2])

@for (int i = 6; i < Model.quantity; i++)
{
    <div id="container_@i" style="width:100%;"></div>
    @DrawTable("container_" + @i.ToString(), Model.header[i], Model.Table1[i], Model.Table2[i], Model.grafValues[i], Model.Colors1[i], Model.Colors2[i])
}

@section Scripts
{
    @Scripts.Render("~/Scripts/highcharts.js")
    @Scripts.Render("~/Scripts/draggable-points.js")
}

@helper DrawTable(string divName, string header, double[,] table1, double[,] table2, List<string> graf, double[,] colors1, double[,] colors2)
{
    <table align="center" style="table-layout: auto;" class="table table-bordered table-striped">
        <thead style="width: 100%">
            <tr>
                <th colspan="25">@header</th>
            </tr>
            <tr>
                <th rowspan="2" align="center">МПЧ 0 км. (МГц)</th>
                <th colspan="24" align="center" style="align-content:center">Часы UT</th>
            </tr>
            <tr>
                @for (int i = 0; i < 24; i++)
                {
                    <td>@i</td>
                }
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>F2_0_МПЧ</td>
                @for (int i = 0; i < 24; i++)
                {
                    if( colors1[0, i] == 1 ) {<td style="background-color:cornsilk;">@GeospaceEntity.Models.Codes.CodeIonka.DisplayValue(table1[0,i])</td>}
                    else{<td>@GeospaceEntity.Models.Codes.CodeIonka.DisplayValue(table1[0,i])</td>}
                }
            </tr>
            <tr>
                <td>F1_0_МПЧ</td>
                @for (int i = 0; i < 24; i++)
                {
                    <td>@GeospaceEntity.Models.Codes.CodeIonka.DisplayValue(table1[1,i])</td>
                }
            </tr>
            <tr>
                <td>E_0_МПЧ</td>
                @for (int i = 0; i < 24; i++)
                {
                    <td>@GeospaceEntity.Models.Codes.CodeIonka.DisplayValue(table1[2,i])</td>
                }
            </tr>
            <tr>
                <td>Es_0_МПЧ</td>
                @for (int i = 0; i < 24; i++)
                {
                    <td>@GeospaceEntity.Models.Codes.CodeIonka.DisplayValue(table1[3,i])</td>
                }
            </tr>
            <tr>
                <td>МПЧ_0</td>
                @for (int i = 0; i < 24; i++)
                {
                    <td>@GeospaceEntity.Models.Codes.CodeIonka.DisplayValue(table1[4,i])</td>
                }
            </tr>
        </tbody>

        <thead style="width: 100%">
            <tr>
                <th rowspan="2" align="center">МПЧ скачка (МГц)</th>
                <th colspan="24" align="center" style="align-content:center">Часы UT</th>
            </tr>
            <tr>
                @for (int i = 0; i < 24; i++)
                {
                    <td>@i</td>
                }
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>F2_4000_МПЧ</td>
                @for (int i = 0; i < 24; i++)
                {
                    if( table2[0,i] >= 1000)
                    {
                        <td>-</td>
                    }
                    else
                    {
                        if( colors1[0, i] == 1 ) {<td style="background-color:cornsilk;">@table2[0, i]</td>}
                        else{<td>@table2[0, i]</td>}
                    }
                }
            </tr>
            <tr>
                <td>F1_3000_МПЧ</td>
                @for (int i = 0; i < 24; i++)
                {
                    if( table2[1,i] >= 1000)
                    {
                        <td>-</td>
                    }
                    else
                    {
                        <td>@table2[1, i]</td>
                    }
                }
            </tr>
            <tr>
                <td>E_2000_МПЧ</td>
                @for (int i = 0; i < 24; i++)
                {
                    if( table2[2,i] >= 1000)
                    {
                        <td>-</td>
                    }
                    else
                    {
                        <td>@table2[2, i]</td>
                    }
                }
            </tr>
            <tr>
                <td>МПЧ_4000</td>
                @for (int i = 0; i < 24; i++)
                {
                    if( table2[3,i] >= 1000)
                    {
                        <td>-</td>
                    }
                    else
                    {
                        <td>@table2[3, i]</td>
                    }
                }
            </tr>

        </tbody>
    </table>
    <div id="@divName" style="width:100%;"></div>    
    <script>

        $(function () {
            $('#@(divName)').highcharts({
                title: {
                    text: ''
                },
                xAxis :{
                    title: {
                        text: 'Часы (UT)'
                    },
                    categories: [
                    @for(int i=0;i<24;i++)
                    {
                        @Html.Raw("'"+i.ToString("00")+"'")

                        if(i!=23)
                        {
                            @:,
                        }
                    }
                ],
                lineWidth: 2,
                gridLineWidth: 1,
                tickInterval:1,
                tickmarkPlacement: 'on',
            },
            yAxis: [{ // Primary yAxis
                labels: {
                    format: '{value}',
                    style: {
                        color: Highcharts.getOptions().colors[1]
                    }
                },
                title: {
                    text:'МГц',
                    style: {
                        color: Highcharts.getOptions().colors[1]
                    }
                },
            },                
            ],
            tooltip: {
                shared: true
            },

            series: [ {
                        name: 'МПЧ_0',
                        type: 'spline',
                        color: 'orange',
                        data: @graf[0]
                        }
                , {
                    name: 'МПЧ_4000',
                    type: 'spline',
                    color: 'red',
                    data: @graf[1]
                    }
                , {
                    name: 'fmin',
                    type: 'spline',
                    color: 'blue',
                    data: @graf[2]
                }]
            });
        });

</script>
    
    <br />
}