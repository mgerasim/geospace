@{
    ViewBag.Title = "Index";
}
@section Scripts
{
    @Scripts.Render("~/Scripts/highcharts.js")
    <script src="http://code.highcharts.com/stock/modules/exporting.js"></script>
    @Scripts.Render("~/Scripts/draggable-points.js")
}
<script type="text/javascript">
    var UrlUmagf = "@Url.Action("GetUmagf", "Api")"; //адрес
    var UrlMediana = "@Url.Action("GetChartMediana", "Api")";
    var UrlDateTime = "@Url.Action("GetDateTime", "Panel")";
 
    function getServerTime( dayZ ) {
        var param = { day: dayZ };
        var day = 0;
        var month = 0;
        var year = 0;
        $.ajax({
            url: UrlDateTime,
            data: param,
            async: false,
            success: function (stringDate) {
                var date = stringDate.split('.');
                day = parseInt(date[0]);
                month = parseInt(date[1])-1;
                year = parseInt(date[2]);
            }
        });
        var dateUtc = new Date(year, month, day);
        return dateUtc;
    }

    function getUTC() {
        var date = new Date();
        var day = date.getDate();
        var month = date.getUTCMonth(); //Изменение данного параметра изменяет дату правильно
        var year = date.getUTCFullYear();
        var hours = date.getUTCHours();
        var minutes = date.getUTCMinutes();
        var seconds = date.getUTCSeconds();
        var dateUtc = new Date(year, month, day,hours,minutes,seconds);
        return dateUtc;
    }
    
    function digitalWatch() {
        var date = getUTC();
        var hours = date.getUTCHours();
        var minutes = date.getMinutes();
        var seconds = date.getSeconds();
        if (hours < 10) hours = "0" + hours;
        if (minutes < 10) minutes = "0" + minutes;
        if (seconds < 10) seconds = "0" + seconds;
        document.getElementById("digital_watch").innerHTML = hours + ":" + minutes + ":" + seconds;
        setTimeout("digitalWatch()", 1000);
    }
    function reloadData(time)
    {
        reloadPage(UrlUmagf, 1, time, 0);
        reloadPage(UrlUmagf, 2, time, 1);
        reloadPage(UrlUmagf, 3, time, 2);
        reloadPage(UrlUmagf, 4, time, 3);
    }

    function reloadPage(Url, ID, time, stationNumber, type)
    {
        if (type === undefined) {
            type = "";
        }
        var list = [46501, 43501, 45601, 38701];
        var param = { StationCode: list[stationNumber], type: type, panel : ID};
        $.ajax({
            url: Url,
            data: param,
            success: function (resp) {
                $('#' + ID).html(resp);
            },
            complete: function () {
                setTimeout(reloadPage, time * 60* 1000, Url, ID, time, stationNumber);
            }
        });
    }
    $(document).ready(function () {
        digitalWatch();
        reloadData(10);
        $('.carousel').carousel({
            interval: 10000,
        })
    })
</script>
<style type="text/css">
    .col-lg-6{
        border-radius:2px;
        border-color:black;
    }
</style>
 

<div id="carousel-example-generic" class="carousel slide" data-ride="carousel" data-keyboard="thue">
    <!-- Indicators -->
    <ol class="carousel-indicators">
        <li data-target="#carousel-example-generic" data-slide-to="0"></li>
        <li data-target="#carousel-example-generic" data-slide-to="1" class="active"></li>
    </ol>

    <!-- Wrapper for slides -->
    <div class="carousel-inner" role="listbox">
        <div class="item ">
            <div class="row">
                <div class="col-sm-6" id="1"></div>
                <div class="col-sm-6" id="2"></div>
            </div>
            <div class="row">
                <div class="col-sm-6" id="3"></div>
                <div class="col-sm-6" id="4"></div>
            </div>
            <table border="1" cellpadding="7" cellspacing="1" width="100%">
                <tbody>
                    <tr align="center">
                        <th align="left" width="20%"><span>Значения A<sub>p</sub></span></th>
                        <td width="13%"><span>0 - 7</span></td>
                        <td width="13%"><span>8 - 14</span></td>
                        <td width="13%"><span>15 - 19</span></td>
                        <td width="13%"><span>20 - 29</span></td>
                        <td width="13%"><span>30 - 49</span></td>
                        <td width="13%"><span>&gt;= 50</span></td>
                    </tr>
                    <tr align="center">
                        <th align="left"><span>Состояние магнитного поля</span></th>
                        <td bgcolor="#00FF00"><span>очень<br>спокойное</span></td>
                        <td bgcolor="#00FF00"><span>спокойное</span></td>
                        <td bgcolor="#FFFF00"><span>неустойчивое</span></td>
                        <td bgcolor="#FF0000"><span>слабо<br>возмущенное</span></td>
                        <td bgcolor="#FF0000"><span>умеренно<br>возмущенное</span></td>
                        <td bgcolor="#FF0000"><br><span>сильно<br>возмущенное<br><br></span></td>
                    </tr>
                </tbody>
            </table>
            <div class="carousel-caption">
                ...
            </div>
        </div>
        <div class="item active">
            <div class="row">
                <div class="col-sm-6" id="cont43501"></div>
                <div class="col-sm-6" id="cont37701"></div>
            </div>
            <div class="row">
                <div class="col-sm-6" id="cont45601"></div>
                <div class="col-sm-6" id="cont46501"></div>
            </div>
            <div class="carousel-caption">
                ...
            </div>
        </div>
        ...
    </div>
</div>
<script type="text/javascript">
    var UrlMedianaJson = "@Url.Action("GetMedianaByDate", "Api")";
    var UrlIonkaJson = "@Url.Action("GetIonkaByPeriod", "Api")";
    $(document).ready(function () {
        panel_median();
    });
    function panel_median() {
        mediana('43501', "Хабаровск");
        mediana('37701', "Салехард");
        mediana('45601', "Магадан");
        //mediana('46501', "Паратунка");
        setTimeout("panel_median()", 10000);
    }

    function DayRange( numberStation, prev_day ) {
        var day = prev_day.getUTCDate();
        var month = prev_day.getUTCMonth()+1;
        var year = prev_day.getUTCFullYear();
        var param = { StationCode: numberStation, YYYY:  year  , MM: month };
        var prev_range = [];
        $.ajax({
            url: UrlMedianaJson,
            data: param,
            async: false,
            dataType: "json",
            success: function (data_prev) {
                $.each(data_prev, function (item, element) {
                    var MinMaxDay = element.Range;
                    var dayMM = MinMaxDay.split('-');
                    if (parseInt(dayMM[0]) <= parseInt(day) && parseInt(day) <= parseInt(dayMM[1])) {
                        prev_range = element.Values;
                    }
                })
            }
        });
        //console.log(prev_range);
        return prev_range;
    }
    
    function mediana(numberStation,name_station) {
        var prev_day = getServerTime(-1);
        var now_day = getServerTime(0);
        console.log(now_day);
        var prev_range = DayRange(numberStation, prev_day); // Данные медианны за передыдущий день
        var now_range = DayRange(numberStation, now_day); // Данные медианны за текущий день день
        var Med = prev_range.concat(now_range);
        var param = { StationCode: numberStation, startYYYY: prev_day.getUTCFullYear(), startMM: prev_day.getUTCMonth()+1, startDD: prev_day.getUTCDate(), endYYYY: now_day.getUTCFullYear(), endMM: now_day.getUTCMonth()+1, endDD: now_day.getUTCDate() };
        $.ajax({
            url: UrlIonkaJson,
            data:param,
            async: false,
            dataType: "json",
            success: function (Day) {
                var dataday = [];
                $.each(Day, function (index, element) {
                    if(element.f0F2 <= 1000)
                    {
                        dataday.push(element.f0F2);
                    }
                    else
                    {
                        dataday.push(null);
                    }
                });
                visitorData(Med, dataday, now_day, prev_day, numberStation, name_station);
            }
        });
    }

    function visitorData(dataMed, dataDay, now_day, prev_day, numberStation, name_station) {
        $('#cont'+numberStation).highcharts({
            title: {
                text: name_station 
            },
            xAxis: {
                type: 'datetime',
                lineWidth: 1,
                gridLineWidth: 1,
                tickInterval:1,
                tickmarkPlacement: 'on',
                plotLines: [{
                    value: Date.UTC(now_day.getUTCFullYear(), now_day.getUTCMonth(), now_day.getUTCDate(), 0),
                    color: 'red',
                    width: 3
                }]
            },

            yAxis: [{ // Primary yAxis
               
                labels: {
                    format: '{value}',
                    style: {
                        color: Highcharts.getOptions().colors[1]
                    }
                },
                title: {
                    text:'',
                },
                min: 0,
                max: 120,
            }],
            //tooltip: {
            //    shared: true
            //},
            exporting: {
                buttons: {
                    contextButton: {
                        enabled:false
                    }
                }
            },
            series: [{
                name: 'Данные наблюдений',
                type: 'column',
                data: dataDay,
                pointStart: Date.UTC(prev_day.getUTCFullYear(), prev_day.getUTCMonth(), prev_day.getUTCDate(), 0),
                pointInterval: 1 * 3600 * 1000, // one hour
                dataLabels: {
                    enabled: true,
                    rotation: -90,
                    color: '#FFFFFF',
                    align: 'right',
                    format: '{point.y:.1f}', // one decimal
                    y: 10, // 10 pixels down from the top
                    style: {
                        fontSize: '13px',
                        fontFamily: 'Verdana, sans-serif'
                    }
                }
            },
                {
                    name: 'Прогноз медианы',
                    type: 'spline',
                    data: dataMed,
                    pointStart: Date.UTC(prev_day.getUTCFullYear(), prev_day.getUTCMonth(), prev_day.getUTCDate(), 0),
                    pointInterval: 1 * 3600 * 1000, // one hour
                }]
        });
  
    };

</script>




