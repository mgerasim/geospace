@using GeospaceEntity.Models.Codes;
@{
    ViewBag.Title = @ViewBag.Title;
}

@section Scripts
{
    @Scripts.Render("~/Scripts/highcharts.js")
    @Scripts.Render("~/Scripts/draggable-points.js")

<script>
    var chart = new Highcharts.Chart({

        chart: {
            renderTo: 'container',
            animation: false
        },

        title: {
            text: 'Медиана (@ViewBag.PrevDate.ToString("MMMM yyyy", System.Globalization.CultureInfo.CurrentCulture)-@ViewBag.CurDate.ToString("MMMM yyyy", System.Globalization.CultureInfo.CurrentCulture))'
        },

        yAxis: {
            min: 0,
            title: {
                text: 'Медиана'
            }
           // categories: ['0', '1', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
        },

        xAxis :{
            title: {
                text: 'Час'
            }
        },

        plotOptions: {
            series: {
                point: {
                    events: {

                        drag: function (e) {
                            // Returning false stops the drag and drops. Example:
                            /*
                            if (e.newY > 300) {
                                this.y = 300;
                                return false;
                            }
                            */

                            $('#drag').html(
                                'Dragging <b>' + this.series.name + '</b>, <b>' + this.category + '</b> to <b>' + Highcharts.numberFormat(e.y, 2) + '</b>');

                        },
                        drop: function () {
                            $('#drop').html(
                                'In <b>' + this.series.name + '</b>, <b>' + this.category + '</b> was set to <b>' + Highcharts.numberFormat(this.y, 2) + '</b>');

                        }
                    }
                },
                stickyTracking: false
            },
            column: {
                stacking: 'normal'
            },
            line: {
                cursor: 'ns-resize'
            }
        },

        tooltip: {
            yDecimals: 2
        },

        @{
            Page.needComma = false;
        }

        @helper DrawSeries(DateTime date)
        {
            GeospaceMediana.Models.ViewMediana viewMedaiana = ViewBag.ViewMediana;
            
            for(int range = 0;range<6;range++)
            {
                string name = date.ToString("yyyy MMMM", System.Globalization.CultureInfo.CurrentCulture) + " " +
                              GeospaceMediana.Models.MedianaCalculator.GetRangeFromNumber(date, range).Header;
                
                var values = new List<int>();

                for(int hour=0; hour<24; hour++)
                {
                    var mediana = viewMedaiana.GetValue(date.Year, date.Month, hour, range);

                    if (mediana.f0F2 == 0)
                    {
                        break;
                    }
                        
                    values.Add(mediana.f0F2);
                }
                
                if(values.Count != 24)
                {
                    continue;
                }

                if (Page.needComma)
                {
                    @:,
                }
                
                @: { data: [
                
                for(int hour=0; hour<24; hour++)
                {
                    @values[hour]
            
                    if(hour != 23)
                    {
                        @:,
                    }
                }
            
            
                @: ],

                @Html.Raw("name: \""+name+"\"")

                @: ,dragMinY: 0, draggableY: true}

                Page.needComma = true;
            }
        }

        series: [ 
            @DrawSeries(ViewBag.PrevDate)
            @DrawSeries(ViewBag.CurDate)
        ]

    });

</script>
}

<style>
    html, body, .container-fluid {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    body {
        overflow: auto; /* добавить полосу прокрутки */
    }
</style>

<div class="row" style="height: 100%">
    <div class="col-md-12" style="height: 100%">
        <div id="container" style="height: 100%"></div>

    </div>

</div>


